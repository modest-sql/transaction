func main() {
	fmt.Println("TESTGROUND")

	Database, _ := data.NewDatabase("Test_Database")

	IC := common.NewIntegerTableColumn("ID", 0, false, false)
	CC := common.NewCharTableColumn("Name", "-", false, false, 20)

	TCD := make([]common.TableColumnDefiner, 0)

	TCD = append(TCD, IC)
	TCD = append(TCD, CC)

	CTC1 := common.NewCreateTableCommand("TEST_TABLE_1", TCD)
	CTC2 := common.NewCreateTableCommand("TEST_TABLE_2", TCD)
	CTC3 := common.NewCreateTableCommand("TEST_TABLE_3", TCD)
	//CTC4 := common.NewCreateTableCommand("TEST_TABLE_4", TCD)

	COMMANDS := make([]interface{}, 0)

	COMMANDS = append(COMMANDS, CTC1)
	COMMANDS = append(COMMANDS, CTC2)
	COMMANDS = append(COMMANDS, CTC3)
	//COMMANDS = append(COMMANDS, CTC4)

	TRANSACTION := NewTransaction(COMMANDS)

	for index := 0; index < len(TRANSACTION.commandsInTransaction); index++ {
		switch TRANSACTION.commandsInTransaction[index].(type) {
		case *common.CreateTableCommand:
			fmt.Println("CREATE")
		case *common.InsertCommand:
			fmt.Println("INSERT")
		case *common.SelectTableCommand:
			fmt.Println("SELECT")
		}
	}

	go StartTransactionManager(Database)

	TChannel <- TRANSACTION
	TChannel <- TRANSACTION
	TChannel <- TRANSACTION
	TChannel <- TRANSACTION

	time.Sleep(4000 * time.Millisecond)

	fmt.Println(Database.AllTables())
}